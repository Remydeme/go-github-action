name: Docker Image CI

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    branches: [ main ]

jobs:


  test:
    runs-on: ubuntu-latest

    steps: # Steps represent a sequence of tasks that will be executed as part of the job
      - uses: actions/checkout@v2 # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: '1.14.0'

      # Install the dependency
      - name: Install dependency
        run: |
          go version
          go get -u ./...
      - uses: actions/checkout@v2

      # Build the code
      - name: Build the
        run: go build -o helloworld.go

      # Run vet & lint on the code
      - name: Run vet & lint
        run: |
          go vet .
          golint .
      - name: Run testing
        run: go test -v


  #The build workflow
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 # get a copy of the repository code
      - name: Build the Docker image # the name of this steps
        run: docker build . --file Dockerfile -t falconr/$(date +%s) # bild the container docker

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{ github.ref == ‘refs/heads/master’ && github.event_name == ‘push’ }}

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Docker registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: wilsontanwm/gosimple
          tag_with_ref: true


      - name: Send slack notification
          - uses: 8398a7/action-slack@v3
          with:
            status: custom
            fields: workflow,job,commit,repo,ref,author,took
            custom_payload: |
              {
                username: 'action-slack',
                icon_emoji: ':octocatgit :',
                attachments: [{
                  color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                  text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} succeeded in ${process.env.AS_TOOK}`,
                }]
              }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          if: always()
